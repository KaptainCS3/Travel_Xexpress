{"ast":null,"code":"var _jsxFileName = \"/home/kaptaincs3/Documents/Meme_Gen/src/component/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport memesObject from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  //create a meme state variable to store current meme display image\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com/2d3al6.jpg\"\n  });\n  const [allMemeImage, setAllMemeImage] = useState(memesObject); //function to fetch random image from meme data object\n\n  function fetchMemeImage() {\n    //map and return meme object url\n    const memeObjectUrl = memesObject.data.memes.map(items => {\n      return items.url;\n    }); // generate random index to access meme data object url\n\n    const randomIndex = Math.floor(Math.random() * memeObjectUrl.length - 1) + 1;\n    const url = memeObjectUrl[randomIndex];\n    setMeme(prevImage => ({ ...prevImage,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"meme-gen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Top text\",\n            name: \"topText\",\n            value: meme.topText,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Bottom text\",\n            name: \"bottomText\",\n            value: meme.bottomText,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"get-meme\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMemeImage,\n            children: \"Get a new meme image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.randomImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"XAMlmBuRevFWvHfr9waeCxcLwZM=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","memesObject","Main","meme","setMeme","topText","bottomText","randomImage","allMemeImage","setAllMemeImage","fetchMemeImage","memeObjectUrl","data","memes","map","items","url","randomIndex","Math","floor","random","length","prevImage","handleChange","event","name","value","target"],"sources":["/home/kaptaincs3/Documents/Meme_Gen/src/component/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport memesObject from \"../memesData\";\nconst Main = () => {\n  //create a meme state variable to store current meme display image\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com/2d3al6.jpg\",\n  });\n\n  const [allMemeImage, setAllMemeImage] = useState(memesObject);\n  \n  //function to fetch random image from meme data object\n  \n  function fetchMemeImage() {\n    //map and return meme object url\n    const memeObjectUrl = memesObject.data.memes.map((items) => {\n      return items.url;\n    });\n    // generate random index to access meme data object url\n    const randomIndex = Math.floor(Math.random() * memeObjectUrl.length - 1) + 1;\n    const url = memeObjectUrl[randomIndex];\n  setMeme((prevImage) => ({\n        ...prevImage,\n        randomImage: url\n    }));\n  }\n\n  function handleChange(event){\n    const {name, value} = event.target\n    setMeme\n  }\n\n\n\n  return (\n    <main>\n      <section className=\"meme-gen\">\n        <div className=\"meme-container\">\n          <div className=\"inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Top text\"\n              name=\"topText\"\n              value={meme.topText}\n              onChange={handleChange}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Bottom text\"\n              name=\"bottomText\"\n              value={meme.bottomText}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"get-meme\">\n            <button onClick={fetchMemeImage}>Get a new meme image</button>\n          </div>\n        </div>\n        <div className=\"meme-img\">\n          <img src={meme.randomImage} alt=\"\" />\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AACA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAC/BK,OAAO,EAAE,EADsB;IAE/BC,UAAU,EAAE,EAFmB;IAG/BC,WAAW,EAAE;EAHkB,CAAD,CAAhC;EAMA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAACC,WAAD,CAAhD,CARiB,CAUjB;;EAEA,SAASS,cAAT,GAA0B;IACxB;IACA,MAAMC,aAAa,GAAGV,WAAW,CAACW,IAAZ,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA4BC,KAAD,IAAW;MAC1D,OAAOA,KAAK,CAACC,GAAb;IACD,CAFqB,CAAtB,CAFwB,CAKxB;;IACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,aAAa,CAACU,MAA9B,GAAuC,CAAlD,IAAuD,CAA3E;IACA,MAAML,GAAG,GAAGL,aAAa,CAACM,WAAD,CAAzB;IACFb,OAAO,CAAEkB,SAAD,KAAgB,EAClB,GAAGA,SADe;MAElBf,WAAW,EAAES;IAFK,CAAhB,CAAD,CAAP;EAIC;;EAED,SAASO,YAAT,CAAsBC,KAAtB,EAA4B;IAC1B,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,KAAK,CAACG,MAA5B;IACAvB,OAAO;EACR;;EAID,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,UAAnB;MAAA,wBACE;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,QAAf;UAAA,wBACE;YACE,IAAI,EAAC,MADP;YAEE,WAAW,EAAC,UAFd;YAGE,IAAI,EAAC,SAHP;YAIE,KAAK,EAAED,IAAI,CAACE,OAJd;YAKE,QAAQ,EAAEkB;UALZ;YAAA;YAAA;YAAA;UAAA,QADF,eAQE;YACE,IAAI,EAAC,MADP;YAEE,WAAW,EAAC,aAFd;YAGE,IAAI,EAAC,YAHP;YAIE,KAAK,EAAEpB,IAAI,CAACG,UAJd;YAKE,QAAQ,EAAEiB;UALZ;YAAA;YAAA;YAAA;UAAA,QARF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAiBE;UAAK,SAAS,EAAC,UAAf;UAAA,uBACE;YAAQ,OAAO,EAAEb,cAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAjBF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAsBE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE;UAAK,GAAG,EAAEP,IAAI,CAACI,WAAf;UAA4B,GAAG,EAAC;QAAhC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAtBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CA/DD;;GAAML,I;;KAAAA,I;AAiEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}