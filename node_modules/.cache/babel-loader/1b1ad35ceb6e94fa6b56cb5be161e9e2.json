{"ast":null,"code":"var _jsxFileName = \"/home/kaptaincs3/Documents/Meme_Gen/src/component/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  //create a meme state variable to store current meme display image\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com2d3al6.jpg\"\n  });\n  const [allMemes, setAllMemes] = useState([]);\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes').then(res => res.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n  console.log(allMemes);\n\n  function fetchMemeImage() {\n    const randonIndex = Math.floor(Math.random() * allMemes.length);\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"meme-gen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Top text\",\n            name: \"topText\",\n            value: meme.topText,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Bottom text\",\n            name: \"bottomText\",\n            value: meme.bottomText,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"get-meme\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMemeImage,\n            children: \"Get a new meme image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.randomImage,\n          alt: meme.randomImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme-text top\",\n          children: meme.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme-text bottom\",\n          children: meme.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"xFChGqmh2QOqt1LPs7ZhmATaynQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Main","meme","setMeme","topText","bottomText","randomImage","allMemes","setAllMemes","fetch","then","res","json","data","memes","console","log","fetchMemeImage","randonIndex","Math","floor","random","length","handleChange","event","name","value","target","prevMeme"],"sources":["/home/kaptaincs3/Documents/Meme_Gen/src/component/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst Main = () => {\n  //create a meme state variable to store current meme display image\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com2d3al6.jpg\",\n  });\n\n  const [allMemes, setAllMemes] = useState([]);\nuseEffect(() =>{\n  fetch('https://api.imgflip.com/get_memes')\n  .then(res => res.json())\n  .then(data => setAllMemes(data.data.memes))\n}, [])\nconsole.log(allMemes)\nfunction fetchMemeImage(){\n  const randonIndex = Math.floor(Math.random() * allMemes.length)\n  \n}\n\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      [name]: value,\n    }));\n  }\n  return (\n    <main>\n      <section className=\"meme-gen\">\n        <div className=\"meme-container\">\n          <div className=\"inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Top text\"\n              name=\"topText\"\n              value={meme.topText}\n              onChange={handleChange}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Bottom text\"\n              name=\"bottomText\"\n              value={meme.bottomText}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"get-meme\">\n            <button \n            onClick={fetchMemeImage}\n            >Get a new meme image</button>\n          </div>\n        </div>\n        <div className=\"meme-img\">\n          <img src={meme.randomImage} alt={meme.randomImage} />\n          <h2 className=\"meme-text top\">{meme.topText}</h2>\n          <h2 className=\"meme-text bottom\">{meme.bottomText}</h2>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAC/BK,OAAO,EAAE,EADsB;IAE/BC,UAAU,EAAE,EAFmB;IAG/BC,WAAW,EAAE;EAHkB,CAAD,CAAhC;EAMA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACFC,SAAS,CAAC,MAAK;IACbS,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAACA,IAAL,CAAUC,KAAX,CAFzB;EAGD,CAJQ,EAIN,EAJM,CAAT;EAKAC,OAAO,CAACC,GAAR,CAAYT,QAAZ;;EACA,SAASU,cAAT,GAAyB;IACvB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,QAAQ,CAACe,MAApC,CAApB;EAED;;EAGC,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IACAxB,OAAO,CAAEyB,QAAD,KAAe,EACrB,GAAGA,QADkB;MAErB,CAACH,IAAD,GAAQC;IAFa,CAAf,CAAD,CAAP;EAID;;EACD,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,UAAnB;MAAA,wBACE;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,QAAf;UAAA,wBACE;YACE,IAAI,EAAC,MADP;YAEE,WAAW,EAAC,UAFd;YAGE,IAAI,EAAC,SAHP;YAIE,KAAK,EAAExB,IAAI,CAACE,OAJd;YAKE,QAAQ,EAAEmB;UALZ;YAAA;YAAA;YAAA;UAAA,QADF,eAQE;YACE,IAAI,EAAC,MADP;YAEE,WAAW,EAAC,aAFd;YAGE,IAAI,EAAC,YAHP;YAIE,KAAK,EAAErB,IAAI,CAACG,UAJd;YAKE,QAAQ,EAAEkB;UALZ;YAAA;YAAA;YAAA;UAAA,QARF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAiBE;UAAK,SAAS,EAAC,UAAf;UAAA,uBACE;YACA,OAAO,EAAEN,cADT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAjBF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAwBE;QAAK,SAAS,EAAC,UAAf;QAAA,wBACE;UAAK,GAAG,EAAEf,IAAI,CAACI,WAAf;UAA4B,GAAG,EAAEJ,IAAI,CAACI;QAAtC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,SAAS,EAAC,eAAd;UAAA,UAA+BJ,IAAI,CAACE;QAApC;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAI,SAAS,EAAC,kBAAd;UAAA,UAAkCF,IAAI,CAACG;QAAvC;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QAxBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CA9DD;;GAAMJ,I;;KAAAA,I;AAgEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}