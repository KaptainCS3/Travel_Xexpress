{"ast":null,"code":"var _jsxFileName = \"/home/kaptaincs3/Documents/react-tms/src/component/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport memesObject from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [memeImage, setMemeImage] = useState();\n  const meme = {\n    topText: \"\",\n    bottomText: \"\",\n    RandomImage: \"\"\n  };\n  const [allMemeImages, setAllMemeImages] = useState(memesObject);\n  console.log(allMemeImages.data.memes.url);\n\n  function genImgUrl() {\n    const memeImg = allMemeImages.data.memes.map(items => {\n      return items.url;\n    });\n    const memeImgIndex = Math.floor(Math.random() * memeImg.length - 1) + 1;\n    se(memeImg[memeImgIndex]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"meme-gen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Top text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Bottom text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"get-meme\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genImgUrl,\n            children: \"Get a new meme image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: memeImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"n8tBjTEiEaaL6pSlsf+kJLD9wro=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","memesObject","Main","memeImage","setMemeImage","meme","topText","bottomText","RandomImage","allMemeImages","setAllMemeImages","console","log","data","memes","url","genImgUrl","memeImg","map","items","memeImgIndex","Math","floor","random","length","se"],"sources":["/home/kaptaincs3/Documents/react-tms/src/component/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport memesObject from \"../memesData\";\nconst Main = () => {\n  const [memeImage, setMemeImage] = useState();\n  const meme = {\n    topText: \"\",\n    bottomText: \"\",\n    RandomImage: \"\",\n  };\n  const [allMemeImages, setAllMemeImages] = useState(memesObject);\n  console.log(allMemeImages.data.memes.url)\n  function genImgUrl() {\n    const memeImg =allMemeImages.data.memes.map((items) => {\n      return items.url;\n    });\n\n    const memeImgIndex = Math.floor(Math.random() * memeImg.length - 1) + 1;\n    se(memeImg[memeImgIndex]);\n  }\n  return (\n    <main>\n      <section className=\"meme-gen\">\n        <div className=\"meme-container\">\n          <div className=\"inputs\">\n            <input type=\"text\" placeholder=\"Top text\" />\n            <input type=\"text\" placeholder=\"Bottom text\" />\n          </div>\n          <div className=\"get-meme\">\n            <button onClick={genImgUrl}>Get a new meme image</button>\n          </div>\n        </div>\n        <div className=\"meme-img\">\n          <img src={memeImage} alt=\"\" />\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AACA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,EAA1C;EACA,MAAMK,IAAI,GAAG;IACXC,OAAO,EAAE,EADE;IAEXC,UAAU,EAAE,EAFD;IAGXC,WAAW,EAAE;EAHF,CAAb;EAKA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAACC,WAAD,CAAlD;EACAU,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACI,IAAd,CAAmBC,KAAnB,CAAyBC,GAArC;;EACA,SAASC,SAAT,GAAqB;IACnB,MAAMC,OAAO,GAAER,aAAa,CAACI,IAAd,CAAmBC,KAAnB,CAAyBI,GAAzB,CAA8BC,KAAD,IAAW;MACrD,OAAOA,KAAK,CAACJ,GAAb;IACD,CAFc,CAAf;IAIA,MAAMK,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,OAAO,CAACO,MAAxB,GAAiC,CAA5C,IAAiD,CAAtE;IACAC,EAAE,CAACR,OAAO,CAACG,YAAD,CAAR,CAAF;EACD;;EACD,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,UAAnB;MAAA,wBACE;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,QAAf;UAAA,wBACE;YAAO,IAAI,EAAC,MAAZ;YAAmB,WAAW,EAAC;UAA/B;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAO,IAAI,EAAC,MAAZ;YAAmB,WAAW,EAAC;UAA/B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAK,SAAS,EAAC,UAAf;UAAA,uBACE;YAAQ,OAAO,EAAEJ,SAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE;UAAK,GAAG,EAAEb,SAAV;UAAqB,GAAG,EAAC;QAAzB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAnCD;;GAAMD,I;;KAAAA,I;AAqCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}